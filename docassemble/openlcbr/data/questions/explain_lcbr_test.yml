features:
  javascript: list_collapse.js
  css: list_collapse.css
---
modules:
  - .lcbr_explain
  - .ibp_explain
  - docassemble.base.util
  - .DATree
---
objects:
  - database: DAStaticFile.using(filename="data/sources/trade_secret_cases.yaml")
  - explanation: DATree
  - test_case: DAObject
  - test_case.factors: DAList.using(object_type=DAObject)
---
mandatory: True
question: docassemble-openlcbr demo
subquestion: |
  This website is a demonstration of the docassemble-openlcbr package being developed
  by Jason Morris of Round Table Law as an ABA Innovation Fellowship project for
  2018/2019.  The fellowship is sponsored by Clio.
  
  The project is to take openlcbr, which is an open-source tool for
  legal case-based reasoning written by Matthias Grabmair, and to implement it as a
  extension to docassemble.
  
  Docassemble is a leading open-source legal expert system and document automation
  platform written by Jonathan Pyle.
  
  The purpose of the project is to explore whether it is possible to use
  reasoning-by-analogy to extend the capabilities of legal expert systems to
  include answering open-textured legal questions.
  
  Click below to continue and see the output of the system, which is generated
  in real time by docassemble-openlcbr.
  
  Please be aware that you are viewing a testing
  environment, and very frequently this interview will be broken.  That is as it
  should be.
field: intro_seen
---
mandatory: True
question: Which of the following factors exist in the test case?
subquestion: |
  Indicate all that are true. Those indicated by default reflect the
  test case "KG" from the openlcbr package, and will demonstrate most of the features
  of the analogical reasoning tool.
fields:
  - note: In your situation, is it true that the...
  - plaintiff disclosed its product information in negotiations with defendant: test_case.F1
    datatype: yesnowide
    default: True
  - defendant paid plaintiff's former employee to switch employment, apparently in an attempt to induce the employee to bring plaintiff's information: test_case.F2
    datatype: yesnowide
  - defendant's employee was the sole developer of plaintiff's product: test_case.F3
    datatype: yesnowide
  - defendant entered into a nondisclosure agreement with plaintiff: test_case.F4
    datatype: yesnowide
  - the nondisclosure agreement did not specify which information was to be treated as confidential: test_case.F5
    datatype: yesnowide
  - plaintiff took active measures to limit access to and distribution of its information: test_case.F6
    datatype: yesnowide
    default: True
  - plaintiff's former employee brought product development information to defendant: test_case.F7
    datatype: yesnowide
  - defendant's access to plaintiff's product information saved it time or expense: test_case.F8
    datatype: yesnowide
  - plaintiff disclosed its product information to outsiders: test_case.F10
    datatype: yesnowide
  - plaintiff's information was about customers and suppliers (i.e. it may have been available independently from customers or even in directories): test_case.F11
    datatype: yesnowide
  - plaintiff's disclosures to outsiders were subject to confidentiality restrictions: test_case.F12
    datatype: yesnowide
  - plaintiff and defendant entered into a noncompetition agreement: test_case.F13
    datatype: yesnowide
  - defendant used materials that were subject to confidentiality restrictions: test_case.F14
    datatype: yesnowide
    default: True
  - plaintiff's information was unique in that plaintiff was the only manufacturer making the product: test_case.F15
    datatype: yesnowide
    default: True
  - plaintiff's product information could be learned by reverse-engineering: test_case.F16
    datatype: yesnowide
    default: True
  - defendant developed its product by independent research: test_case.F17
    datatype: yesnowide
  - defendant's product was identical to plaintiff's: test_case.F18
    datatype: yesnowide
    default: True
  - plaintiff did not adopt any security measures: test_case.F19
    datatype: yesnowide
  - plaintiff's information was known to competitors: test_case.F20
    datatype: yesnowide
  - defendant obtained plaintiff's information altough he knew that plaintiff's information was confidential: test_case.F21
    datatype: yesnowide
    default: True
  - defendant used invasive techniques to gain access to plaintiff's information: test_case.F22
    datatype: yesnowide
  - plaintiff entered into an agreement waiving confidentiality: test_case.F23
    datatype: yesnowide
  - the information could be obtained from publicly available sources: test_case.F24
    datatype: yesnowide
  - defendant discovered plaintiff's information through reverse engineering: test_case.F25
    datatype: yesnowide
    default: True
  - defendant obtained plaintiff's information through deception: test_case.F26
    datatype: yesnowide
  - plaintiff disclosed its information in a public forum: test_case.F27
    datatype: yesnowide
---
mandatory: True
question: Your issue would be decided for the ${ prediction_word(explanation.prediction) }
subquestion: |
  ${ explanation.display_tree() }
---
mandatory: True
code: |
  explanation = run_lcbr_test(database.path(), test_case)
  
---